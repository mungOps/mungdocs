<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>쿠버네티스 패턴 on Mungs Book</title>
    <link>http://mungdocs.kro.kr/devops/docs/Kubernetes/kube/patten/</link>
    <description>Recent content in 쿠버네티스 패턴 on Mungs Book</description>
    <generator>Hugo</generator>
    <language>devops</language>
    <atom:link href="http://mungdocs.kro.kr/devops/docs/Kubernetes/kube/patten/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>1. 분산 기본 요소</title>
      <link>http://mungdocs.kro.kr/devops/docs/Kubernetes/kube/patten/k8s/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://mungdocs.kro.kr/devops/docs/Kubernetes/kube/patten/k8s/</guid>
      <description>&lt;br&gt;&#xA;&lt;h2 id=&#34;책의-주요구성&#34;&gt;&#xA;  &lt;strong&gt;책의 주요구성&lt;/strong&gt;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%ec%b1%85%ec%9d%98-%ec%a3%bc%ec%9a%94%ea%b5%ac%ec%84%b1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;hr&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;strong&gt;패턴명&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;각 패턴에는 이름이 붙어 있는데, 이 패턴명은 각 장의 제목이기도 하다. 패턴명은 패턴 언어의 핵심이다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;strong&gt;문제&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;더 넓은 맥락을 제공하고 패턴 영역을 자세하게 설명한다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;strong&gt;해결책&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;패턴이 쿠버네티스 고유의 방식으로 어떻게 문제를 해결하는지에 관한 내용을 다룬다. 또한, 주어진 패턴의 일부분이거나 관련성 있는 다른 패턴들에 대한 상호 참조도 포함한다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;strong&gt;정리&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;주어진 맥락에 대한 해결책의 장단점에 대해 정리한다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;strong&gt;참고자료&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;마지막 절로서, 패턴과 관련된 부가 정보 출처를 제공한다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;br&gt;&#xA;&lt;br&gt;&#xA;&lt;h2 id=&#34;클라우드-네이티브&#34;&gt;&#xA;  &lt;strong&gt;클라우드 네이티브&lt;/strong&gt;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%ed%81%b4%eb%9d%bc%ec%9a%b0%eb%93%9c-%eb%84%a4%ec%9d%b4%ed%8b%b0%eb%b8%8c&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;hr&gt;&#xA;&lt;br&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;쿠버네티스 같은 클라우드 네이티브 플랫폼에서 가장 인기 있는 애플리케이션 아키텍처는 마이크로서비스 microservice 방식으로, &lt;strong&gt;해당 방식은 소프트웨어 개발 기술은 운영 복잡성을 보다 효율적으로 관리&lt;/strong&gt;할 수 있게 해줌&lt;/li&gt;&#xA;&lt;li&gt;바운디드 컨텍스트 개념은 대형 모델들을 각 컴포넌트로 분리해 다루고, 애그리깃 개념은 바운디드 컨텍스트를 트랜잭션 경계를 갖는 모듈로 그룹화는 개념에 근거&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;br&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;strong&gt;개념&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;Bounded Context (바운디드 컨텍스트)&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;Aggregate (애그리깃)&lt;/strong&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;정의&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;시스템 내에서 모델이 의미 있게 구분되는 영역을 나타냄. 각 바운디드 컨텍스트는 독립적으로 설계되고 이해될 수 있는 도메인 모델을 갖음.&lt;/td&gt;&#xA;          &lt;td&gt;도메인 모델의 집합으로, 특정 엔티티와 그와 관련된 엔티티들을 함께 묶어서 일관성을 유지하는 단위.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;목표&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;도메인 모델을 명확하게 분리하여, 각 모델이 서로 다른 컨텍스트에서 다르게 해석되지 않도록 함.&lt;/td&gt;&#xA;          &lt;td&gt;도메인 내에서 불변성을 보장하고, 하나의 트랜잭션 내에서 일관성을 유지하기 위한 집합체.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;구성 요소&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;여러 개의 유비쿼터스 언어를 사용할 수 있으며, 각각 독립적인 도메인 모델을 가질 수 있음.&lt;/td&gt;&#xA;          &lt;td&gt;엔티티, 값 객체, 루트 엔티티가 포함되어, 일관성 있게 트랜잭션을 처리하는 집합체.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;책임&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;특정 도메인의 경계를 정의하고, 해당 경계 내에서만 특정 모델과 언어를 사용함.&lt;/td&gt;&#xA;          &lt;td&gt;비즈니스 규칙을 캡슐화하고, 애그리깃 루트(AGGREGATE ROOT) 엔티티를 통해 다른 엔티티에 대한 접근을 제어.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;설계 및 구현&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;시스템 내에서 분리된 여러 컴포넌트를 만들고, 각 컴포넌트 내에서 독립적인 도메인 모델을 정의하고 관리.&lt;/td&gt;&#xA;          &lt;td&gt;트랜잭션 일관성 유지, 객체 간 관계를 캡슐화하고, 애그리깃 루트를 통해 도메인 객체를 조작.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;통합&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;다른 바운디드 컨텍스트와의 통합은 명확한 인터페이스와 계약을 통해 이루어짐.&lt;/td&gt;&#xA;          &lt;td&gt;애그리깃 내부에서의 상태 변경은 루트를 통해서만 이루어지며, 다른 애그리깃과의 상호작용은 제한됨.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;일관성 관리&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;각 바운디드 컨텍스트 내에서 일관성 있게 도메인 모델을 관리하며, 바운디드 컨텍스트 간의 일관성은 느슨하게 유지될 수 있음.&lt;/td&gt;&#xA;          &lt;td&gt;애그리깃 내부의 엔티티들 간의 일관성은 반드시 애그리깃 루트를 통해 보장되며, 외부 시스템과의 일관성은 다른 방식으로 처리.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;예시&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;전자상거래 시스템의 &lt;code&gt;주문&lt;/code&gt;과 &lt;code&gt;결제&lt;/code&gt;는 각각 다른 바운디드 컨텍스트일 수 있음.&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;주문&lt;/code&gt; 애그리깃: 주문 엔티티, 주문 항목 엔티티, 결제 엔티티 등이 애그리깃의 일관성을 유지하면서 묶여 있음.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;br&gt;&#xA;&lt;p&gt;()[]&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
