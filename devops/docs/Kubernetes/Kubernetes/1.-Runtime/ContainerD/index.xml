<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ContainerD on Mungs Book</title>
    <link>http://mungdocs.kro.kr/devops/docs/Kubernetes/Kubernetes/1.-Runtime/ContainerD/</link>
    <description>Recent content in ContainerD on Mungs Book</description>
    <generator>Hugo</generator>
    <language>devops</language>
    <atom:link href="http://mungdocs.kro.kr/devops/docs/Kubernetes/Kubernetes/1.-Runtime/ContainerD/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title> Concept</title>
      <link>http://mungdocs.kro.kr/devops/docs/Kubernetes/Kubernetes/1.-Runtime/ContainerD/file0/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://mungdocs.kro.kr/devops/docs/Kubernetes/Kubernetes/1.-Runtime/ContainerD/file0/</guid>
      <description>ContainerD # Containerd는 Docker 사에서 moby project 와 함께 발표하여 CNCF 에 기증한 오픈소스입니다.&#xA;ContainerD 2022년 4월 Docker engine이 쿠버네티스에서 사용중단을 발표한 후, 높은 점유율을 이루고 있습니다.&#xA;간단하게 기존에 사용하던 Docker engine을 사용하지 않고 ContainerD를 사용 하게된 이유를 정리하자면 쿠버네티스는 여러 컨테이너 런타임과 통신할 수 있도록 하는 CRI라는 표준 인터페이스를 설계함.&#xA;Docker engine은 CRI 인터페이스가 생기기전 존재한 기술로 CRI 인터페이스와 맞지 않았음.&#xA;이를 해결하기 위해 dockershim이라는 어댑터 컴포넌트를 개발하였음.</description>
    </item>
    <item>
      <title> install</title>
      <link>http://mungdocs.kro.kr/devops/docs/Kubernetes/Kubernetes/1.-Runtime/ContainerD/file1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://mungdocs.kro.kr/devops/docs/Kubernetes/Kubernetes/1.-Runtime/ContainerD/file1/</guid>
      <description>ContainerD Install # ContainerD 환경구성 # # CRI를 사용하기 위한 네트워크 설정 # net.bridge.bridge-nf-call-iptables: 브리징된 네트워크 인터페이스에서 트래픽을 iptables를 통해 필터링 할 수 있도록 허용 # net.bridge.bridge-nf-call-ip6tables: IPv6 네트워크에서도 브리지된 트래픽을 ip6tables를 통해 필터링할 수 있도록 허용 # net.ipv4.ip_forward: IP 포워딩을 활성화 $ cat &amp;gt; /etc/sysctl.d/99-k8s-cri.conf &amp;lt;&amp;lt;EOF net.bridge.bridge-nf-call-iptables=1 net.bridge.bridge-nf-call-ip6tables=1 net.ipv4.ip_forward=1 EOF # 변경사항 적용 $ sysctl --system # OverlayFS: 파일 시스템을 로드하여 컨테이너의 파일 시스템을 효율적으로 관리 # br_netfilter: 브리지 네트워크 트래픽을 iptables로 전달할 수 있도록 하는 모듈 $ modprobe overlay; modprobe br_netfilter $ echo -e overlay\\nbr_netfilter &amp;gt; /etc/modules-load.</description>
    </item>
  </channel>
</rss>
